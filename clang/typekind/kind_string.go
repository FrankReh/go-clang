// Code generated by "stringer -type=Kind"; DO NOT EDIT.

package typekind

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Invalid-0]
	_ = x[Unexposed-1]
	_ = x[Void-2]
	_ = x[Bool-3]
	_ = x[Char_U-4]
	_ = x[UChar-5]
	_ = x[Char16-6]
	_ = x[Char32-7]
	_ = x[UShort-8]
	_ = x[UInt-9]
	_ = x[ULong-10]
	_ = x[ULongLong-11]
	_ = x[UInt128-12]
	_ = x[Char_S-13]
	_ = x[SChar-14]
	_ = x[WChar-15]
	_ = x[Short-16]
	_ = x[Int-17]
	_ = x[Long-18]
	_ = x[LongLong-19]
	_ = x[Int128-20]
	_ = x[Float-21]
	_ = x[Double-22]
	_ = x[LongDouble-23]
	_ = x[NullPtr-24]
	_ = x[Overload-25]
	_ = x[Dependent-26]
	_ = x[ObjCId-27]
	_ = x[ObjCClass-28]
	_ = x[ObjCSel-29]
	_ = x[Float128-30]
	_ = x[Half-31]
	_ = x[Float16-32]
	_ = x[ShortAccum-33]
	_ = x[Accum-34]
	_ = x[LongAccum-35]
	_ = x[UShortAccum-36]
	_ = x[UAccum-37]
	_ = x[ULongAccum-38]
	_ = x[BFloat16-39]
	_ = x[FirstBuiltin-2]
	_ = x[LastBuiltin-39]
	_ = x[Complex-100]
	_ = x[Pointer-101]
	_ = x[BlockPointer-102]
	_ = x[LValueReference-103]
	_ = x[RValueReference-104]
	_ = x[Record-105]
	_ = x[Enum-106]
	_ = x[Typedef-107]
	_ = x[ObjCInterface-108]
	_ = x[ObjCObjectPointer-109]
	_ = x[FunctionNoProto-110]
	_ = x[FunctionProto-111]
	_ = x[ConstantArray-112]
	_ = x[Vector-113]
	_ = x[IncompleteArray-114]
	_ = x[VariableArray-115]
	_ = x[DependentSizedArray-116]
	_ = x[MemberPointer-117]
	_ = x[Auto-118]
	_ = x[Elaborated-119]
	_ = x[Pipe-120]
	_ = x[OCLImage1dRO-121]
	_ = x[OCLImage1dArrayRO-122]
	_ = x[OCLImage1dBufferRO-123]
	_ = x[OCLImage2dRO-124]
	_ = x[OCLImage2dArrayRO-125]
	_ = x[OCLImage2dDepthRO-126]
	_ = x[OCLImage2dArrayDepthRO-127]
	_ = x[OCLImage2dMSAARO-128]
	_ = x[OCLImage2dArrayMSAARO-129]
	_ = x[OCLImage2dMSAADepthRO-130]
	_ = x[OCLImage2dArrayMSAADepthRO-131]
	_ = x[OCLImage3dRO-132]
	_ = x[OCLImage1dWO-133]
	_ = x[OCLImage1dArrayWO-134]
	_ = x[OCLImage1dBufferWO-135]
	_ = x[OCLImage2dWO-136]
	_ = x[OCLImage2dArrayWO-137]
	_ = x[OCLImage2dDepthWO-138]
	_ = x[OCLImage2dArrayDepthWO-139]
	_ = x[OCLImage2dMSAAWO-140]
	_ = x[OCLImage2dArrayMSAAWO-141]
	_ = x[OCLImage2dMSAADepthWO-142]
	_ = x[OCLImage2dArrayMSAADepthWO-143]
	_ = x[OCLImage3dWO-144]
	_ = x[OCLImage1dRW-145]
	_ = x[OCLImage1dArrayRW-146]
	_ = x[OCLImage1dBufferRW-147]
	_ = x[OCLImage2dRW-148]
	_ = x[OCLImage2dArrayRW-149]
	_ = x[OCLImage2dDepthRW-150]
	_ = x[OCLImage2dArrayDepthRW-151]
	_ = x[OCLImage2dMSAARW-152]
	_ = x[OCLImage2dArrayMSAARW-153]
	_ = x[OCLImage2dMSAADepthRW-154]
	_ = x[OCLImage2dArrayMSAADepthRW-155]
	_ = x[OCLImage3dRW-156]
	_ = x[OCLSampler-157]
	_ = x[OCLEvent-158]
	_ = x[OCLQueue-159]
	_ = x[OCLReserveID-160]
	_ = x[ObjCObject-161]
	_ = x[ObjCTypeParam-162]
	_ = x[Attributed-163]
	_ = x[OCLIntelSubgroupAVCMcePayload-164]
	_ = x[OCLIntelSubgroupAVCImePayload-165]
	_ = x[OCLIntelSubgroupAVCRefPayload-166]
	_ = x[OCLIntelSubgroupAVCSicPayload-167]
	_ = x[OCLIntelSubgroupAVCMceResult-168]
	_ = x[OCLIntelSubgroupAVCImeResult-169]
	_ = x[OCLIntelSubgroupAVCRefResult-170]
	_ = x[OCLIntelSubgroupAVCSicResult-171]
	_ = x[OCLIntelSubgroupAVCImeResultSingleRefStreamout-172]
	_ = x[OCLIntelSubgroupAVCImeResultDualRefStreamout-173]
	_ = x[OCLIntelSubgroupAVCImeSingleRefStreamin-174]
	_ = x[OCLIntelSubgroupAVCImeDualRefStreamin-175]
	_ = x[ExtVector-176]
	_ = x[Atomic-177]
}

const (
	_Kind_name_0 = "InvalidUnexposedVoidBoolChar_UUCharChar16Char32UShortUIntULongULongLongUInt128Char_SSCharWCharShortIntLongLongLongInt128FloatDoubleLongDoubleNullPtrOverloadDependentObjCIdObjCClassObjCSelFloat128HalfFloat16ShortAccumAccumLongAccumUShortAccumUAccumULongAccumBFloat16"
	_Kind_name_1 = "ComplexPointerBlockPointerLValueReferenceRValueReferenceRecordEnumTypedefObjCInterfaceObjCObjectPointerFunctionNoProtoFunctionProtoConstantArrayVectorIncompleteArrayVariableArrayDependentSizedArrayMemberPointerAutoElaboratedPipeOCLImage1dROOCLImage1dArrayROOCLImage1dBufferROOCLImage2dROOCLImage2dArrayROOCLImage2dDepthROOCLImage2dArrayDepthROOCLImage2dMSAAROOCLImage2dArrayMSAAROOCLImage2dMSAADepthROOCLImage2dArrayMSAADepthROOCLImage3dROOCLImage1dWOOCLImage1dArrayWOOCLImage1dBufferWOOCLImage2dWOOCLImage2dArrayWOOCLImage2dDepthWOOCLImage2dArrayDepthWOOCLImage2dMSAAWOOCLImage2dArrayMSAAWOOCLImage2dMSAADepthWOOCLImage2dArrayMSAADepthWOOCLImage3dWOOCLImage1dRWOCLImage1dArrayRWOCLImage1dBufferRWOCLImage2dRWOCLImage2dArrayRWOCLImage2dDepthRWOCLImage2dArrayDepthRWOCLImage2dMSAARWOCLImage2dArrayMSAARWOCLImage2dMSAADepthRWOCLImage2dArrayMSAADepthRWOCLImage3dRWOCLSamplerOCLEventOCLQueueOCLReserveIDObjCObjectObjCTypeParamAttributedOCLIntelSubgroupAVCMcePayloadOCLIntelSubgroupAVCImePayloadOCLIntelSubgroupAVCRefPayloadOCLIntelSubgroupAVCSicPayloadOCLIntelSubgroupAVCMceResultOCLIntelSubgroupAVCImeResultOCLIntelSubgroupAVCRefResultOCLIntelSubgroupAVCSicResultOCLIntelSubgroupAVCImeResultSingleRefStreamoutOCLIntelSubgroupAVCImeResultDualRefStreamoutOCLIntelSubgroupAVCImeSingleRefStreaminOCLIntelSubgroupAVCImeDualRefStreaminExtVectorAtomic"
)

var (
	_Kind_index_0 = [...]uint16{0, 7, 16, 20, 24, 30, 35, 41, 47, 53, 57, 62, 71, 78, 84, 89, 94, 99, 102, 106, 114, 120, 125, 131, 141, 148, 156, 165, 171, 180, 187, 195, 199, 206, 216, 221, 230, 241, 247, 257, 265}
	_Kind_index_1 = [...]uint16{0, 7, 14, 26, 41, 56, 62, 66, 73, 86, 103, 118, 131, 144, 150, 165, 178, 197, 210, 214, 224, 228, 240, 257, 275, 287, 304, 321, 343, 359, 380, 401, 427, 439, 451, 468, 486, 498, 515, 532, 554, 570, 591, 612, 638, 650, 662, 679, 697, 709, 726, 743, 765, 781, 802, 823, 849, 861, 871, 879, 887, 899, 909, 922, 932, 961, 990, 1019, 1048, 1076, 1104, 1132, 1160, 1206, 1250, 1289, 1326, 1335, 1341}
)

func (i Kind) String() string {
	switch {
	case 0 <= i && i <= 39:
		return _Kind_name_0[_Kind_index_0[i]:_Kind_index_0[i+1]]
	case 100 <= i && i <= 177:
		i -= 100
		return _Kind_name_1[_Kind_index_1[i]:_Kind_index_1[i+1]]
	default:
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
